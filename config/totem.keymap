//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3
#define TVP1 4
#define TVP2 5

&mt {
    quick-tap-ms = <175>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <280>;
    require-prior-idle-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        space-layer {
            bindings = <&to 6>;
            key-positions = <35 7 31>;
        };

        default-layer {
            bindings = <&to 0>;
            key-positions = <20 2 34>;
        };

        soft-off-combo {
            bindings = <&soft_off>;
            key-positions = <9 19 30>;
        };

        gaming-layer {
            bindings = <&to 7>;
            key-positions = <35 37 31>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <17 18>;
        };

        backword {
            bindings = <&kp LC(BACKSPACE)>;
            key-positions = <16 17 18>;
        };

        open-parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
        };

        close-parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <5 6>;
        };

        open-brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <13 14>;
        };

        close-brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <15 16>;
        };

        open-bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <25 24>;
        };

        close-bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <26 27>;
        };
    };

    macros {
        alt_layer: fkey_layer_with_alt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &mo 5>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LEFT_ALT &mo 5>;

            label = "FKEY_LAYER_WITH_ALT";
        };
    };

    behaviors {
        hrm_left: hrm_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37>;
        };

        hrm_right: hrm_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34>;
        };

        hrm_left_alt_layer: hrm_left_alt_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_LEFT_ALT_LAYER";
            bindings = <&alt_layer>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

        base_layer {
            // ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓

            label = "BASE";

            // ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
            //             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
            //             ┃     Q     ┃     W     ┃     F     ┃     P     ┃     G     ┃   ┃     J     ┃     L     ┃     U     ┃     Y     ┃     ;     ┃
            //             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
            //             ┃     A     ┃     R     ┃     S     ┃     T     ┃     D     ┃   ┃     H     ┃     N     ┃     E     ┃     I     ┃     O     ┃
            // ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
            // ┃     Q     ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     K     ┃     M     ┃     ,     ┃     .     ┃     /     ┃     \     ┃
            // ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
            //                                     ┃    DEL    ┃    TAB    ┃    SPC    ┃   ┃   ENTER   ┃           ┃   BSPC    ┃
            //                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛

            bindings = <
                       &kp Q                 &kp W                    &kp E                     &kp R                   &kp T        &kp Y  &kp U                     &kp I                       &kp O                   &kp P
                       &hrm_left LEFT_WIN A  &hrm_left_alt_layer 0 S  &hrm_left LEFT_CONTROL D  &hrm_left LEFT_SHIFT F  &kp G        &kp H  &hrm_right RIGHT_SHIFT J  &hrm_right RIGHT_CONTROL K  &hrm_right RIGHT_ALT L  &hrm_right RIGHT_WIN SQT
&mt LEFT_SHIFT ESCAPE  &kp Z                 &kp X                    &kp C                     &kp V                   &kp B        &kp N  &kp M                     &kp COMMA                   &kp DOT                 &kp FSLH                  &mt RIGHT_SHIFT BACKSPACE
                                                                      &kp LCTRL                 &kp LEFT_SHIFT          &lt 2 TAB    &mo 1  &kp SPACE                 &lt 3 ENTER
            >;
        };

        arrows {
            bindings = <
        &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans    &kp PAGE_UP    &kp HOME  &kp UP    &kp END    &trans
        &trans  &trans  &kp LBKT              &kp RBKT               &trans    &kp PAGE_DOWN  &kp LEFT  &kp DOWN  &kp RIGHT  &trans
&trans  &trans  &trans  &trans                &trans                 &trans    &trans         &trans    &trans    &trans     &trans  &trans
                        &trans                &trans                 &trans    &trans         &trans    &trans
            >;
        };

        numbers {
            bindings = <
        &kp EXCLAMATION  &kp AT_SIGN    &kp HASH      &kp DOLLAR  &kp PERCENT    &kp N7  &kp N8  &kp N9        &trans      &trans
        &kp CARET        &kp AMPERSAND  &kp ASTERISK  &trans      &trans         &kp N4  &kp N5  &kp N6        &kp MINUS   &kp EQUAL
&trans  &trans           &trans         &trans        &trans      &trans         &kp N1  &kp N2  &kp N3        &kp PERIOD  &trans     &trans
                                        &mo 4         &trans      &trans         &trans  &trans  &kp NUMBER_0
            >;
        };

        dev {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans         &trans            &trans
        &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans         &kp SEMI          &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &kp LESS_THAN  &kp GREATER_THAN  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        settings {
            bindings = <
            &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4     &trans  &trans  &trans  &trans  &trans
            &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4    &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &trans         &trans         &trans         &trans         &trans           &trans  &trans  &trans  &trans  &trans  &bt BT_CLR_ALL
                                          &trans         &trans         &trans           &trans  &trans  &trans
            >;
        };

        alt-layer {
            bindings = <
        &trans  &trans  &trans  &trans       &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans       &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans       &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &kp LS(TAB)  &trans    &trans  &trans  &trans
            >;
        };

        left_space {
            bindings = <
        &trans  &trans  &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &kp SPACE  &trans    &trans  &trans  &trans
            >;
        };

        gaming {
            bindings = <
            &kp TAB           &kp Q  &kp W      &kp E      &kp R    &trans  &trans  &trans  &trans  &trans
            &kp LEFT_SHIFT    &kp A  &kp S      &kp D      &kp F    &trans  &trans  &trans  &trans  &trans
&kp ESCAPE  &kp LEFT_CONTROL  &kp Z  &kp X      &kp C      &kp V    &trans  &trans  &trans  &trans  &trans  &trans
                                     &kp LCTRL  &kp SPACE  &kp Y    &trans  &trans  &trans
            >;
        };

        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
        // ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
    };
};
